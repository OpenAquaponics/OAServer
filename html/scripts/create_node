#!/usr/bin/env python

import os;
import getpass;
import subprocess;
import argparse;
import random;


def main(**kwargs):

  # Process the command line arguements
  if(kwargs['u']): username = kwargs['u'];
  else: username  = str(raw_input("  Enter MySQL username: "));

  if(kwargs['p']): password = kwargs['p'];
  else: password  = getpass.getpass("  Enter MySQL password: ");
  

  # There is probably a more correct way to see if the username/password are valid, but this works
  with open(os.devnull,"w") as fnull:
    cmd = "mysql -u %s --password=%s -e 'SHOW DATABASES'" % (username, password);
    ret = subprocess.call(cmd, shell = True, stdout = fnull);
    if(ret) :
      exit(1);

  print "---------------\nCreating new OANode"

  OANodeCfg = {};
  OANodeCfg["sUsername"]      = str(raw_input("  Enter Username              (REQUIRED): "));
  OANodeCfg["sSystemId"]      = str(raw_input("  Enter SystemId              (REQUIRED): "));
  OANodeCfg["mPollingPeriod"] = str(raw_input("  Enter Polling Period (secs) (REQUIRED): "));
  OANodeCfg["sNodeId"]        = str("%X" % (random.randrange(0, 0xFFFFFFFF)));
  OANodeCfg["sChannelNames"]  = str(raw_input("  Enter Channel Names         (OPTIONAL): "));
  OANodeCfg["sChannelUnits"]  = str(raw_input("  Enter Channel Units         (OPTIONAL): "));
  OANodeCfg["sDescription"]   = str(raw_input("  Enter Description           (OPTIONAL): "));
  OANodeCfg["bPublic"]        = str("1"); # Make this a validated input
  OANodeCfg["bEnable"]        = str("1"); # Make this a validated input

  key_str = '';
  val_str = '';
  for key, val in OANodeCfg.iteritems():
    if(len(val) > 0):
      key_str = key_str + key + ',';
      val_str = val_str + '"' + val + '",';
    else :
      key_str = key_str + key + ',';
      val_str = val_str + 'NULL,';

  key_str = key_str[:-1];
  val_str = val_str[:-1];

  print "  -- Attempting to create OANode: %s --" % (OANodeCfg["sNodeId"]);

  with open(os.devnull,"w") as fnull:
    cmd = "mysql -u %s --password=%s -e 'INSERT INTO OAServer.OANodeCfg (%s) VALUES (%s)'" % (username, password, key_str, val_str);
    ret = subprocess.call(cmd, shell = True, stdout = fnull);
    cmd = "mysql -u %s --password=%s -e 'CREATE TABLE IF NOT EXISTS 'OAData.%s' (mIdx INT PRIMARY KEY AUTO_INCREMENT NOT NULL UNIQUE, mTimeTag INT NOT NULL, sData VARCHAR(128))'" % (username, password, OANodeCfg["sNodeId"]);
    ret = subprocess.call(cmd, shell = True, stdout = fnull);

if __name__ == "__main__":
  parser = argparse.ArgumentParser(description = "Create a user in the database", version = "%(prog)s 1.0");
  parser.add_argument('-u', nargs="?", type = str, default = "", help = "MySQL database username");
  parser.add_argument('-p', nargs="?", type = str, default = "", help = "MySQL database password");
  args = parser.parse_args();
  main(**vars(args));




